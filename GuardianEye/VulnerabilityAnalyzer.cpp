#include "VulnerabilityAnalyzer.hpp"
#include "ProtocolScanner.hpp"
#include <iostream>

std::map<int, std::string> vulnerableServices = {
    {80, "HTTP server with known vulnerabilities"},
    {21, "FTP server with known vulnerabilities"}
};

void analyzeVulnerabilities(const std::vector<ProtocolConfiguration>& customProtocols) {
    std::vector<Vulnerability> vulnerabilities;

    for (const ProtocolConfiguration& protocolConfig : customProtocols) {
        Vulnerability vuln;
        vuln.service = protocolConfig.protocolName;
        vuln.description = "No vulnerabilities found.";

        if (vulnerableServices.find(protocolConfig.port) != vulnerableServices.end()) {
            Vulnerability vuln;
            vuln.service = protocolConfig.protocolName;
            vuln.description = "Potential security risk: " + vulnerableServices[protocolConfig.port];
            vulnerabilities.push_back(vuln);
        }

        vulnerabilities.push_back(vuln);
    }

    for (const Vulnerability& vuln : vulnerabilities) {
        std::cout << "Service: " << vuln.service << std::endl;
        std::cout << "Vulnerability: " << vuln.description << std::endl;
        std::cout << "------------------------" << std::endl;
    }
}
